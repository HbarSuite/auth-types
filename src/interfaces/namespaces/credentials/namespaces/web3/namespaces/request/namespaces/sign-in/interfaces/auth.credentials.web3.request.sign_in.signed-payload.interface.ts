import { _IAuthentication } from '../../authentication/auth.credentials.web3.request.authentication.namespace'

/**
 * Web3 Sign-in Signed Payload Interface
 * @interface _ISignedPayload
 * @export _ISignedPayload
 * @namespace IAuth._ICredentials._IWeb3._IRequest._ISignin._ISignedPayload
 * @description Defines the structure of the signed payload used in Web3 sign-in process.
 * Contains the server signature and original authentication payload.
 * @property {Uint8Array} serverSignature - The cryptographic signature generated by the server to verify authenticity
 * @property {_IAuthentication.IPayload} originalPayload - The original authentication payload data that was signed
 * @since 2.0.0
 * @public
 * @see {@link _IAuthentication.IPayload}
 * @example
 * ```typescript
 * const signedPayload: _ISignedPayload = {
 *   serverSignature: new Uint8Array([1, 2, 3, 4, 5]),
 *   originalPayload: {
 *     url: "https://example.com/auth",
 *     node: "node-1", 
 *     data: {
 *       token: "abc123"
 *     }
 *   }
 * };
 * ```
 */
export interface _ISignedPayload {
    /**
     * Server signature
     * @description Cryptographic signature generated by the server to verify the authenticity of the payload
     * @type {Uint8Array}
     * @memberof _ISignedPayload
     * @since 2.0.0
     * @remarks This signature is used to validate that the payload was not tampered with during transmission
     * @throws {Error} If signature verification fails
     * @example
     * ```typescript
     * serverSignature: new Uint8Array([1, 2, 3, 4, 5])
     * ```
     */
    serverSignature: Uint8Array

    /**
     * Original authentication payload
     * @description The authentication payload data that was signed by the server
     * @type {_IAuthentication.IPayload}
     * @memberof _ISignedPayload
     * @since 2.0.0
     * @see {@link _IAuthentication.IPayload}
     * @throws {Error} If payload is malformed or missing required fields
     * @remarks Contains critical authentication data including URL, node identifier, and token information
     * @example
     * ```typescript
     * originalPayload: {
     *   url: "https://example.com/auth",
     *   node: "node-1",
     *   data: {
     *     token: "abc123"
     *   }
     * }
     * ```
     */
    originalPayload: _IAuthentication.IPayload
}