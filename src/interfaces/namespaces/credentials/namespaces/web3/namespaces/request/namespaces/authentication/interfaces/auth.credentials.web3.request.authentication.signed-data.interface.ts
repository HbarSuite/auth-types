/**
 * Web3 Authentication Signed Data Interface
 * @interface _ISignedData
 * @export _ISignedData
 * @namespace IAuth._ICredentials._IWeb3._IRequest._IAuthentication._ISignedData
 * @description Represents the signed data structure for Web3 authentication containing signature and server account information.
 * This interface is used to store and validate cryptographic signatures and server identities for secure Web3 authentication.
 * @property {Uint8Array} signature - The digital signature of the authentication data
 * @property {string} serverSigningAccount - The account identifier of the server that signed the data
 * @since 2.0.0
 * @public
 * @category Authentication
 * @see {@link IAuth._ICredentials._IWeb3._IRequest._IAuthentication} Parent namespace
 * @throws {Error} When signature or server signing account is invalid
 * @remarks
 * The signed data is crucial for verifying the authenticity of Web3 authentication requests.
 * The signature should be generated using a secure cryptographic algorithm.
 * @example
 * ```typescript
 * const signedData: _ISignedData = {
 *   signature: new Uint8Array([1, 2, 3, 4, 5]),
 *   serverSigningAccount: "0x1234567890abcdef"
 * };
 * ```
 */
export interface _ISignedData {
    /**
     * Digital signature
     * @description A cryptographic signature used to verify the authenticity of the authentication data.
     * The signature is generated by the server and must be verified before processing the authentication request.
     * @property {Uint8Array} signature - Digital signature bytes
     * @type {Uint8Array}
     * @memberof _ISignedData
     * @since 2.0.0
     * @category Properties
     * @throws {TypeError} When attempting to assign invalid signature data
     * @remarks
     * The signature should be generated using a standardized cryptographic algorithm
     * compatible with Web3 authentication protocols.
     * @example
     * ```typescript
     * signature: new Uint8Array([1, 2, 3, 4, 5])
     * ```
     */
    signature: Uint8Array;

    /**
     * Server signing account
     * @description Unique identifier for the server account that generated the signature.
     * This account is used to verify the origin of the signature and must be a valid Web3 address.
     * @property {string} serverSigningAccount - Server account identifier
     * @type {string}
     * @memberof _ISignedData
     * @since 2.0.0
     * @category Properties
     * @throws {Error} When server signing account format is invalid
     * @remarks
     * The server signing account should be a valid Web3 address in the standard format.
     * This account must be registered and authorized to sign authentication requests.
     * @example
     * ```typescript
     * serverSigningAccount: "0x1234567890abcdef"
     * ```
     */
    serverSigningAccount: string;
}